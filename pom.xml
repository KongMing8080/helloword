<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.spring</groupId>
  <artifactId>maven01</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>maven01 Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <!-- 继承 承自springboot的官方 pom  -->
   <parent>
  	<groupId>org.springframework.boot</groupId>
  	<artifactId>spring-boot-starter-parent</artifactId>
  	<version>2.0.4.RELEASE</version>
  </parent>
   <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>
  </properties>
  <dependencies>
   <dependency>
    	<groupId>org.springframework.boot</groupId>
    	<artifactId>spring-boot-starter-web</artifactId>
    	<exclusions>
    		<exclusion>
    			<groupId>org.springframework.boot</groupId>
    			<artifactId>spring-boot-starter-tomcat</artifactId>
    		</exclusion>
    		<exclusion>
            <groupId>org.springframework.boot</groupId>
                 <artifactId>spring-boot-starter-logging</artifactId>
            </exclusion>
    	</exclusions>
    </dependency>
    <dependency>
    	<groupId>org.springframework.boot</groupId>
    	<artifactId>spring-boot-starter-aop</artifactId>
    </dependency>
    <dependency>
         <groupId>org.springframework.boot</groupId>
         <artifactId>spring-boot-starter-log4j2</artifactId>
    </dependency>
    <!-- <dependency>
    	<groupId>org.springframework.boot</groupId>
    	<artifactId>spring-boot-starter-security</artifactId>
    </dependency> -->
    <!-- 配置内嵌的tomcat, 可通过主类的main方法或者spring-boot:run命令启动
    	   若要使用外部的tomcat，则需要加上<scope>provided</scope>来声明在打包时不将
                        内嵌的tomcat包放进lib里面，确保外部的tomcat与应用中的jar包不冲突;
         注意：在外部tomcat部署项目时需要把oracle的jdbc包和jstl包复制到tomcat的lib下，把项目中的jdbc包的scope改为provided，否则会出错！
     -->
    <!-- --> 
    <dependency>
    	<groupId>org.springframework.boot</groupId>
    	<artifactId>spring-boot-starter-tomcat</artifactId>
    	<scope>provided</scope>  
    </dependency>  
     <!-- swagger2核心包和swagger-ui界面包 -->
    <dependency>
	   <groupId>io.springfox</groupId>
	   <artifactId>springfox-swagger2</artifactId>
	   <version>2.2.2</version>
	</dependency>
	<!-- spring-boot有自己的一套web端拦截机制，若需要看到swagger发布的api文档界面，需要做一些特殊的配置，将springfox-swagger-ui包中的ui界面暴露给spring-boot资源环境。 -->
	<dependency>
	   <groupId>io.springfox</groupId>
	   <artifactId>springfox-swagger-ui</artifactId>
	   <version>2.2.2</version>
	</dependency>
	<!-- swagger-ui自定义界面 访问地址 http://localhost:9090/qydoc/docs.html -->
	<dependency>
	  <groupId>com.github.caspar-chen</groupId>
	  <artifactId>swagger-ui-layer</artifactId>
	  <version>1.1.3</version>
	</dependency>
    <!-- jsp页面使用jstl标签 -->
    <dependency>
    	<groupId>javax.servlet</groupId>
    	<artifactId>jstl</artifactId>
    </dependency>
    <!-- <dependency>
    	<groupId>org.springframework.boot</groupId>
    	<artifactId>spring-boot-devtools</artifactId>
    	<optional>true</optional>
    </dependency> -->
    <!-- 编译jsp -->
    <!-- scope选项: 
    compile:编译依赖范围。如果没有指定，就会默认使用该依赖范围。使用此依赖范围的Maven依赖，对于编译、测试、运行三种classpath都有效。
    		典型的例子是spring-code,在编译、测试和运行的时候都需要使用该依赖。
	test: 测试依赖范围。使用次依赖范围的Maven依赖，只对于测试classpath有效，在编译主代码或者运行项目的使用时将无法使用此依赖。典型的
			例子是Jnuit,它只有在编译测试代码及运行测试的时候才需要。
	provided:已提供依赖范围。使用此依赖范围的Maven依赖，对于编译和测试classpath有效，但在运行时候无效。典型的例子是servlet-api,
			编译和测试项目的时候需要该依赖，但在运行项目的时候，由于容器以及提供，就不需要Maven重复地引入一遍。
             注：该包中含有javax.servlet对应的包，在编译项目时是必须的，但并不需要打包进lib,所以将scope声明为provided
     -->
    <dependency>
    	<groupId>org.apache.tomcat.embed</groupId>
    	<artifactId>tomcat-embed-jasper</artifactId>
    	<scope>provided</scope>
    </dependency>
    <dependency>
    	<groupId>org.mybatis.spring.boot</groupId>
    	<artifactId>mybatis-spring-boot-starter</artifactId>
    	<version>1.3.1</version>
    </dependency>
    <!-- <dependency>
    	<groupId>tk.mybatis</groupId>
    	<artifactId>mapper-spring-boot-starter</artifactId>
    	<version>1.1.5</version>
    </dependency> -->
     <dependency>
    	<groupId>mysql</groupId>
    	<artifactId>mysql-connector-java</artifactId>
    </dependency>
    <!-- <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.9.1</version>
    </dependency>
    <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.9.1</version>
    </dependency> -->
    <dependency>
    	<groupId>com.github.pagehelper</groupId>
    	<artifactId>pagehelper-spring-boot-starter</artifactId>
    	<version>1.2.3</version>
    </dependency>
    <dependency>
    	<groupId>javax.mail</groupId>
    	<artifactId>mail</artifactId>
    	<version>1.4.7</version>
    </dependency>
    
   <!--  <dependency>
    	<groupId>org.springframework.boot</groupId>
    	<artifactId>spring-boot-starter-test</artifactId>
    	<exclusions>
    		<exclusion>
    			<groupId>com.vaadin.external.google</groupId>
    			<artifactId>android-json</artifactId>
    		</exclusion>
    	</exclusions>
    	<scope>test</scope>
    </dependency> -->
    
    <!-- <dependency>
    	<groupId>oracle</groupId>
		<artifactId>ojdbc6</artifactId>
		<version>1.6</version>
		<scope>provided</scope>
    </dependency> -->
    
    <dependency>
    	<groupId>org.apache.cxf</groupId>
    	<artifactId>cxf-spring-boot-starter-jaxws</artifactId>
    	<version>3.2.1</version>
    </dependency>
    <dependency>
    	<groupId>org.apache.httpcomponents</groupId>
		<artifactId>httpclient</artifactId>
		<version>4.5.4</version>
    </dependency>
    <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpmime</artifactId>
        <version>4.5.4</version>
    </dependency>
    <!-- 阿里短信服务 -->
    <dependency>
		<groupId>com.aliyun</groupId>
		<artifactId>aliyun-java-sdk-core</artifactId>
		<version>3.7.1</version>
	</dependency>
	<dependency>
		<groupId>com.aliyun</groupId>
		<artifactId>aliyun-java-sdk-dysmsapi</artifactId>
		<version>1.1.0</version>
	</dependency>
	<dependency>
		<groupId>com.alibaba</groupId>
		<artifactId>druid</artifactId>
		<version>1.1.6</version>
	</dependency>
	<dependency>
		<groupId>org.json</groupId>
		<artifactId>json</artifactId>
		<version>20171018</version>
	</dependency>
	<dependency>
		<groupId>commons-httpclient</groupId>
		<artifactId>commons-httpclient</artifactId>
		<version>3.1</version>
	</dependency>
	<dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.4</version>
            <classifier>jdk15</classifier>
        </dependency>
  </dependencies>
   <build>
    <finalName>maven01</finalName>
    <plugins>
  		<plugin>
  			<groupId>org.springframework.boot</groupId>
  			<artifactId>spring-boot-maven-plugin</artifactId>
  		</plugin>
  		<plugin>
  			<!-- 跳过单元测试 -->
  			<groupId>org.apache.maven.plugins</groupId>
  			<artifactId>maven-surefire-plugin</artifactId>
  			<configuration>
  				<skip>true</skip>
  			</configuration>
  		</plugin>
  	</plugins>
  </build>
</project>
